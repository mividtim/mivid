{"version":3,"file":"mixin.js","sources":["mixin.coffee"],"names":[],"mappings":"AAAA,IAAA,WAAA;EAAA;;AAAA,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,KAAA,GAAQ,OAAA,CAAQ,SAAR;;AAER,MAAM,CAAC,OAAP,GAAiB;EAAA,IAAA,EAAM,SAAC,MAAD;AAErB,QAAA;IAAA,IAAI,CAAC,KAAL,CAAW;MAAA,IAAA,EAAM,SAAA;eAAG,IAAC,CAAA,EAAD,CAAI,OAAJ,EAAa,SAAA;UAC/B,gBAAgB,CAAC,eAAjB,CAAiC,IAAC,CAAA,IAAI,CAAC,gBAAN,CAAuB,MAAvB,CAAjC;iBACA,gBAAgB,CAAC,oBAAjB,CAAA;QAF+B,CAAb;MAAH,CAAN;KAAX;IAIA,IAAI,CAAC,KAAL,CAAW,eAAX,EAA4B;MAAA,IAAA,EAAM,SAAA;eAChC,IAAC,CAAA,aAAD,GACE;UAAA,MAAA,EAAQ;YACN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aADM,EAEN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aAFM,EAGN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aAHM,EAIN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAJM,EAKN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,YAApB;aALM,EAMN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aANM,EAON;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,aAApB;aAPM,EAQN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aARM,EASN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,mBAApB;aATM,EAUN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aAVM,EAWN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aAXM,EAYN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aAZM,EAaN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,OAApB;aAbM,EAcN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAdM,EAeN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aAfM,EAgBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,MAApB;aAhBM,EAiBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aAjBM,EAkBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAlBM,EAmBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,WAApB;aAnBM,EAoBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,OAApB;aApBM,EAqBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aArBM,EAsBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,eAApB;aAtBM,EAuBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAvBM,EAwBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,WAApB;aAxBM,EAyBN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,aAApB;aAzBM,EA0BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aA1BM,EA2BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aA3BM,EA4BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aA5BM,EA6BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aA7BM,EA8BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aA9BM,EA+BN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,eAApB;aA/BM,EAgCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,YAApB;aAhCM,EAiCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,YAApB;aAjCM,EAkCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAlCM,EAmCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,gBAApB;aAnCM,EAoCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,cAApB;aApCM,EAqCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,MAApB;aArCM,EAsCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAtCM,EAuCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,QAApB;aAvCM,EAwCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,cAApB;aAxCM,EAyCN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,cAApB;aAzCM,EA0CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,gBAApB;aA1CM,EA2CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,cAApB;aA3CM,EA4CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,WAApB;aA5CM,EA6CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,OAApB;aA7CM,EA8CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,MAApB;aA9CM,EA+CN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aA/CM,EAgDN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,UAApB;aAhDM,EAiDN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,YAApB;aAjDM,EAkDN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,eAApB;aAlDM,EAmDN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,WAApB;aAnDM,EAoDN;cAAC,KAAA,EAAO,IAAR;cAAc,IAAA,EAAM,SAApB;aApDM;WAAR;;MAF8B,CAAN;KAA5B;IAyDA,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB;MAAA,IAAA,EAAM,SAAA;QAC1B,IAAC,CAAA,OAAD,GAAW,SAAC,IAAD;AACT;YACE,IAAA,GAAO,IAAI,IAAA,CAAK,IAAI,CAAC,KAAL,CAAW,IAAX,CAAL,CAAqB,CAAC,WAAtB,CAAA,CAAmC,CAAC,KAApC,CAA0C,GAA1C,CAA+C,CAAA,CAAA,EAD5D;WAAA,aAAA;YAGE,IAAA,GAAO,GAHT;;iBAIA;QALS;eAMX,IAAC,CAAA,OAAD,GAAW,SAAC,IAAD;AACT;YACE,IAAA,GAAW,IAAA,IAAA,CAAK,IAAI,CAAC,KAAL,CAAW,IAAX,CAAL,CAAqB,CAAC,WAAtB,CAAA,CAAmC,CAAC,KAApC,CAA0C,GAA1C,CAA+C,CAAA,CAAA,CAAE,CAAC,KAAlD,CAAwD,GAAxD,EAA6D,CAA7D,CAA+D,CAAC,IAAhE,CAAqE,GAArE,EADb;WAAA,aAAA;YAGE,IAAA,GAAO,GAHT;;iBAIA;QALS;MAPe,CAAN;KAAtB;IAcA,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB;MAAA,IAAA,EAAM,SAAA;eACxB,IAAC,CAAA,OAAD,GAAW,SAAC,OAAD;iBACT,QAAQ,CAAC,aAAT,CAAuB,WAAvB,CAAmC,CAAC,gBAAgB,CAAC,YAArD,CAAkE;YAAC,SAAA,OAAD;WAAlE;QADS;MADa,CAAN;KAAtB;IAIA,IAAI,CAAC,KAAL,CAAW,mBAAX,EAAgC;MAAA,IAAA,EAAM,SAAA;eACpC,IAAC,CAAA,iBAAD,GAAqB,SAAC,WAAD;iBAClB,WAAA,WAAW,CAAC,gBAAZ,CAA6B,gBAA7B,CAAA,CAAkD,CAAC,GAApD,CAAwD,SAAC,MAAD;mBAAY,MAAM,CAAC;UAAnB,CAAxD;QADmB;MADe,CAAN;KAAhC;IAIA,YAAA,GAAe,SAAC,GAAD;AACb,UAAA;MAAA,GAAG,CAAC,OAAJ,CAAY,OAAZ;AACA;AAAA;WAAA,qCAAA;;qBAAA,YAAA,CAAa,GAAb;AAAA;;IAFa;IAIf,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB;MAAA,IAAA,EAAM,SAAA;eAAG,IAAC,CAAA,KAAD,GAAS;MAAZ,CAAN;KAApB;IAEA,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB;MAAA,IAAA,EAAM,SAAA;AACxB,YAAA;QAAA,MAAmB,OAAA,CAAQ,SAAR,CAAnB,EAAC,qBAAD,EAAU;QACV,IAAC,CAAA,OAAD,GAAW;QACX,IAAC,CAAA,QAAD,GAAY,KAAK,CAAC;QAClB,IAAC,CAAA,KAAD,GAAS,KAAK,CAAC,QAAN,CAAA;QACT,WAAA,GAAc;QACd,IAAC,CAAA,EAAD,CAAI,OAAJ,EAAa,SAAA;UACX,IAAC,CAAA,KAAD,GAAS,KAAK,CAAC,QAAN,CAAA;iBACT,WAAA,GAAc,KAAK,CAAC,SAAN,CAAgB,CAAA,SAAA,KAAA;mBAAA,SAAA;cAC5B,KAAC,CAAA,KAAD,GAAS,KAAK,CAAC,QAAN,CAAA;qBACT,KAAC,CAAA,MAAD,CAAA;YAF4B;UAAA,CAAA,CAAA,CAAA,IAAA,CAAhB;QAFH,CAAb;eAKA,IAAC,CAAA,EAAD,CAAI,SAAJ,EAAe,SAAA;iBAAG,WAAA,CAAA;QAAH,CAAf;MAXwB,CAAN;KAApB;IAaA,QAAA,GAAW,SAAC,IAAD,EAAO,KAAP;aAAiB,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB;QAAA,IAAA,EAAM,SAAA;iBAAG,IAAE,CAAA,IAAA,CAAF,GAAU;QAAb,CAAN;OAAjB;IAAjB;AACX;SAAA,cAAA;;mBAAA,QAAA,CAAS,IAAT,EAAe,KAAf;AAAA;;EAzGqB,CAAN","sourcesContent":["riot = require \"riot\"\nsound = require \"./sound\"\n\nmodule.exports = init: (mixins) ->\n\n  riot.mixin init: -> @on \"mount\", ->\n    componentHandler.upgradeElements @root.querySelectorAll \".mdl\"\n    componentHandler.upgradeAllRegistered()\n\n  riot.mixin \"dropDownLists\", init: ->\n    @dropDownLists =\n      states: [\n        {value: \"AL\", name: \"Alabama\"}\n        {value: \"AK\", name: \"Alaska\"}\n        {value: \"AZ\", name: \"Arizona\"}\n        {value: \"AR\", name: \"Arkansas\"}\n        {value: \"CA\", name: \"California\"}\n        {value: \"CO\", name: \"Colorado\"}\n        {value: \"CT\", name: \"Connecticut\"}\n        {value: \"DE\", name: \"Deleware\"}\n        {value: \"DC\", name: \"Dist. of Columbia\"}\n        {value: \"FL\", name: \"Florida\"}\n        {value: \"GA\", name: \"Georgia\"}\n        {value: \"HA\", name: \"Hawaii\"}\n        {value: \"ID\", name: \"Idaho\"}\n        {value: \"IL\", name: \"Illinois\"}\n        {value: \"IN\", name: \"Indiana\"}\n        {value: \"IA\", name: \"Iowa\"}\n        {value: \"KS\", name: \"Kansas\"}\n        {value: \"KY\", name: \"Kentucky\"}\n        {value: \"LA\", name: \"Louisiana\"}\n        {value: \"ME\", name: \"Maine\"}\n        {value: \"MD\", name: \"Maryland\"}\n        {value: \"MA\", name: \"Massachusetts\"}\n        {value: \"MI\", name: \"Michigan\"}\n        {value: \"MN\", name: \"Minnesota\"}\n        {value: \"MS\", name: \"Mississippi\"}\n        {value: \"MO\", name: \"Missouri\"}\n        {value: \"MT\", name: \"Montana\"}\n        {value: \"NE\", name: \"Nebraska\"}\n        {value: \"NV\", name: \"Nevada\"}\n        {value: \"NV\", name: \"Nevada\"}\n        {value: \"NH\", name: \"New Hampshire\"}\n        {value: \"NJ\", name: \"New Jersey\"}\n        {value: \"NM\", name: \"New Mexico\"}\n        {value: \"NY\", name: \"New York\"}\n        {value: \"NC\", name: \"North Carolina\"}\n        {value: \"ND\", name: \"North Dakota\"}\n        {value: \"OH\", name: \"Ohio\"}\n        {value: \"OK\", name: \"Oklahoma\"}\n        {value: \"OR\", name: \"Oregon\"}\n        {value: \"PA\", name: \"Pennsylvania\"}\n        {value: \"RI\", name: \"Rhode Island\"}\n        {value: \"SC\", name: \"South Carolina\"}\n        {value: \"SD\", name: \"South Dakota\"}\n        {value: \"TN\", name: \"Tennessee\"}\n        {value: \"TX\", name: \"Texas\"}\n        {value: \"UT\", name: \"Utah\"}\n        {value: \"VT\", name: \"Vermont\"}\n        {value: \"VA\", name: \"Virginia\"}\n        {value: \"WA\", name: \"Washington\"}\n        {value: \"WV\", name: \"West Virginia\"}\n        {value: \"WI\", name: \"Wisconsin\"}\n        {value: \"WY\", name: \"Wyoming\"}\n      ]\n\n  riot.mixin \"fixDate\", init: ->\n    @fixDate = (date) ->\n      try\n        date = new Date(Date.parse date).toISOString().split(\"T\")[0]\n      catch\n        date = \"\"\n      date\n    @fixTime = (date) ->\n      try\n        date = new Date(Date.parse date).toISOString().split(\"T\")[1].split(\":\", 2).join \":\"\n      catch\n        date = \"\"\n      date\n\n  riot.mixin \"message\", init: ->\n      @message = (message) ->\n        document.querySelector(\".snackbar\").MaterialSnackbar.showSnackbar {message}\n\n  riot.mixin \"multiSelectValues\", init: ->\n    @multiSelectValues = (multiSelect) ->\n      [multiSelect.querySelectorAll(\"option:checked\")...].map (option) -> option.value\n\n  triggerRoute = (tag) ->\n    tag.trigger \"route\"\n    triggerRoute tag for tag in tag.tags\n\n  riot.mixin \"sound\", init: -> @sound = sound\n\n  riot.mixin \"state\", init: ->\n    {actions, store} = require \"./redux\"\n    @actions = actions\n    @dispatch = store.dispatch\n    @state = store.getState()\n    unsubscribe = null\n    @on \"mount\", ->\n      @state = store.getState()\n      unsubscribe = store.subscribe =>\n        @state = store.getState()\n        @update()\n    @on \"unmount\", -> unsubscribe()\n\n  register = (name, mixin) -> riot.mixin name, init: -> @[name] = mixin\n  register name, mixin for name, mixin of mixins\n"]}